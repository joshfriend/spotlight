pluginManagement {
  plugins {
    id 'com.gradle.develocity' version '4.0.1'
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
    id 'org.jetbrains.kotlin.jvm' version '2.1.20'
    id 'com.autonomousapps.testkit' version '0.13'
    id 'com.autonomousapps.build-health' version '3.4.0'
    id 'com.autonomousapps.plugin-best-practices-plugin' version '0.10'
    id 'org.jetbrains.kotlinx.binary-compatibility-validator' version '0.17.0'
    id 'com.gradle.plugin-publish' version '1.3.1'
    id 'com.vanniktech.maven.publish' version '0.31.0'
    id 'com.android.lint' version '8.9.1'
    id 'org.jetbrains.intellij.platform' version '2.6.0'
  }
  repositories {
    gradlePluginPortal()
    mavenCentral()
    google()
  }
}

plugins {
  id 'com.gradle.develocity'
  id 'org.gradle.toolchains.foojay-resolver-convention'
  id 'org.jetbrains.kotlin.jvm' apply false
  id 'com.autonomousapps.build-health'
}

dependencyResolutionManagement {
  repositories {
    mavenCentral()
    google()
  }
}

develocity {
  buildScan {
    publishing.onlyIf { true }
    termsOfUseUrl = "https://gradle.com/terms-of-service"
    termsOfUseAgree = "yes"

    if (System.getenv("CI")) {
      tag("CI")
    } else {
      tag("Local")
    }
  }
}

rootProject.name = 'spotlight'

include ':buildscript-utils'
include ':spotlight-gradle-plugin'

// only include the IDE plugin for sync, or if it was requested via flag for builds
def buildIdePlugin = providers.gradleProperty("buildIdePlugin")
  .getOrElse("false").toBoolean()
def isSync = providers.systemProperty("idea.sync.active")
  .getOrElse("false").toBoolean()
if (buildIdePlugin || isSync) {
  include ':spotlight-idea-plugin'
}